name: Build immortalwrt_24.10

on:
  workflow_dispatch:
  repository_dispatch:
    types: build

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  CONFIG_FILE: immortalwrt-24.10.config
  DIY_SH: diy-immortalwrt-24.10.sh
  DIY_SH2: diy-immortalwrt-24.10.2.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Free Disk Space
      run: |
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo apt clean
        docker rmi $(docker images -q)
        df -h

    - name: Checkout
      uses: actions/checkout@v4

    - name: Check Server Configuration
      run: |
        echo "CPU cores: $(nproc)"
        echo "Memory: $(free -h | grep Mem: | awk '{print $2}')"
        echo "Disk: $(df -h | grep / | awk '{print $2}')"

    - name: Initialization Environment
      run: |
        sudo apt update -y
        sudo apt install -y build-essential git python3 python3-distutils curl wget libssl-dev bc libelf-dev libncurses-dev unzip ccache file rsync python2 python3 python3-pip
        sudo timedatectl set-timezone "$TZ"

    - name: Clone Source Code
      run: |
        git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "src-git kenzo https://github.com/kenzok8/openwrt-packages.git;main" >> feeds.conf.default

    - name: Load Custom Feeds and Configuration
      run: |
        cd openwrt
        cp ../$CONFIG_FILE .config
        make oldconfig  # 确保配置与源代码兼容
        chmod +x ../$DIY_SH
        chmod +x ../$DIY_SH2
        ../$DIY_SH
        ../$DIY_SH2

    - name: Download Packages
      run: |
        cd openwrt
        make download -j8

    - name: Compile the Firmware
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 V=s  # 多核编译，若失败则单核带详细日志

    - name: Organize and Upload Files
      run: |
        cd openwrt/bin/targets/x86/64/
        mkdir -p upload
        for file in immortalwrt-x86-64-generic-squashfs-combined-efi.img.gz sha256sums config.buildinfo feeds.buildinfo version.buildinfo; do
          [ -f "$file" ] && cp "$file" upload/
        done
        cd upload
        7z a -tzip firmware.zip *

    - name: Upload Firmware
      uses: actions/upload-artifact@v4
      with:
        name: Firmware
        path: |
          openwrt/bin/targets/x86/64/upload/firmware.zip
