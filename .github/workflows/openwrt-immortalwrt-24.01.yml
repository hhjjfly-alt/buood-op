name: Build ImmortalWrt

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      # 检查磁盘空间
      - name: Check Disk Space Before Cleanup
        run: df -hT

      # 清理磁盘空间
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true
          docker-images: true

      # 再次检查磁盘空间
      - name: Check Disk Space After Cleanup
        run: df -hT

      # 确保磁盘空间足够（至少需要 10GB 可用空间）
      - name: Ensure Enough Disk Space
        run: |
          available_space=$(df -h / | awk 'NR==2 {print $4}' | sed 's/G//')
          if (( $(echo "$available_space < 10" | bc -l) )); then
            echo "磁盘空间不足，可用空间为 ${available_space}G，需要至少 10G！"
            exit 1
          fi

      # 检出代码
      - name: Checkout
        uses: actions/checkout@v4

      # 设置时区
      - name: Set Timezone
        run: |
          sudo timedatectl set-timezone Asia/Shanghai

      # 下载 ImmortalWrt 源码
      - name: Clone ImmortalWrt Repository
        run: |
          git clone https://github.com/immortalwrt/immortalwrt -b openwrt-24.10 openwrt

      # 复制配置文件和自定义脚本
      - name: Copy Configuration and Scripts
        run: |
          cp feeds.conf.default openwrt/feeds.conf
          cp immortalwrt-24.10.config openwrt/.config
          cp diy-immortalwrt-24.10.sh openwrt/diy-part1.sh
          cp diy-immortalwrt-24.10.2.sh openwrt/diy-part2.sh

      # 更新和安装 Feeds
      - name: Update and Install Feeds
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      # 执行自定义脚本
      - name: Run DIY Scripts
        working-directory: ./openwrt
        run: |
          chmod +x diy-part1.sh diy-part2.sh
          ./diy-part1.sh
          ./diy-part2.sh

      # 编译固件（限制并行任务为 CPU 核心数，避免内存/磁盘压力过大）
      - name: Compile Firmware
        working-directory: ./openwrt
        run: |
          # 确保配置正确
          make defconfig
          # 编译并将日志输出到文件
          make -j$(nproc) V=s 2>&1 | tee build.log
        env:
          DEVICE_NAME: _generic
          FILE_DATE: _$(date +%Y%m%d%H%M)

      # 检查磁盘空间
      - name: Check Disk Space After Compilation
        run: df -hT

      # 检查固件是否存在
      - name: Check Firmware Directory
        run: |
          if [ -d "openwrt/bin/targets/x86_64/generic" ]; then
            cd openwrt/bin/targets/x86_64/generic
            rm -f immortalwrt-x86-64-generic-squashfs-rootfs.img.gz
            rm -f immortalwrt-x86-64-generic-kernel.bin
            rm -f profiles.json
            rm -rf packages
            echo "FIRMWARE=$PWD" >> $GITHUB_ENV
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "固件目录 openwrt/bin/targets/x86_64/generic 不存在，可能是编译失败。"
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "查看编译日志："
            cat openwrt/build.log
            exit 1
          fi

      # 上传固件
      - name: Upload Firmware
        if: steps.check-firmware.outputs.status == 'success'
        uses: actions/upload-artifact@main
        with:
          name: firmware-${{ env.DEVICE_NAME }}-${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}

      # 创建 Release
      - name: Create Release Tag
        if: steps.check-firmware.outputs.status == 'success'
        run: |
          echo "RELEASE_TAG=ImmortalWrt-$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
          touch release.txt
          echo "status=success" >> $GITHUB_OUTPUT

      # 删除旧的 Releases 和 Workflows
      - name: Delete Old Releases and Workflows
        uses: ophub/delete-releases-workflows@main
        with:
          delete_releases: true
          releases_keep_latest: 5
          delete_tags: true
          delete_workflows: true
          workflows_keep_day: 30
          gh_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease_option: all
          out_log: false
